#
# Unified Makefile for Handy/SDL Portable Lynx Emulator
#
# by James L. Hammons
#
# This software is licensed under the GPL v2 or any later version. Set the
# file GPL.TXT for details. ;-)
#

# Figure out which system we're compiling for, and set the appropriate variables

OSTYPE=dingux
EXESUFFIX  = .dge

CHAINPREFIX := /opt/mipsel-linux-uclibc
CROSS_COMPILE := $(CHAINPREFIX)/usr/bin/mipsel-linux-

CC  := $(CROSS_COMPILE)gcc
CXX := $(CROSS_COMPILE)g++
STRIP := $(CROSS_COMPILE)strip
LD  := $(CROSS_COMPILE)gcc

SYSROOT := $(shell $(CC) --print-sysroot)
SDL_CFLAGS := $(shell $(SYSROOT)/usr/bin/sdl-config --cflags)
SDL_LIBS := $(shell $(SYSROOT)/usr/bin/sdl-config --libs)

TARGET     = handy320

CFLAGS = -DGCWZERO -DDINGUX -DDINGUX -O2 -mips32 -DWANT_CRC32 -DANSI_GCC -DSDL_PATCH $(SDL_CFLAGS)
CPPFLAGS = $(CFLAGS)
LDFLAGS =
LIBS = -lstdc++ $(SDL_LIBS) -lz -lpthread -lSDL_image -lSDL_ttf

INCS = -I./src -I./src/handy-libretro -I./src/sdlemu

OBJS = \
		obj/cart.o \
		obj/memmap.o \
		obj/mikie.o \
		obj/ram.o \
		obj/rom.o \
		obj/susie.o \
		obj/system.o \
		obj/eeprom.o \
		obj/lynxdec.o \
		obj/sdlemu_filter.o \
		obj/handy_sdl_main.o \
		obj/handy_sdl_handling.o \
		obj/handy_sdl_graphics.o \
		obj/handy_sdl_sound.o \
		obj/gui.o \
		obj/font.o
		# obj/unzip.o \

all: obj $(TARGET)$(EXESUFFIX)
	@echo "*** Looks like it compiled OK... Give it a whirl!"

clean:
	@echo -n "*** Cleaning out the garbage..."
	@rm -rf obj
	@rm -f ./$(TARGET)$(EXESUFFIX)
	@echo done!

obj:
	@mkdir obj

obj/%.o: src/gui/%.cpp
	@echo "*** Compiling $<..."
	$(CC) $(CPPFLAGS) $(INCS) -c $< -o $@

obj/%.o: src/handy-libretro/%.cpp
	@echo "*** Compiling $<..."
	$(CC) $(CPPFLAGS) $(INCS) -c $< -o $@

obj/%.o: src/%.c
	@echo "*** Compiling $<..."
	$(CC) $(CFLAGS) $(INCS) -c $< -o $@

obj/%.o: src/%.cpp
	@echo "*** Compiling $<..."
	$(CC) $(CPPFLAGS) $(INCS) -c $< -o $@

obj/%.o: src/sdlemu/%.c
	@echo "*** Compiling $<..."
	$(CC) $(CFLAGS) $(INCS) -c $< -o $@

obj/%.o: src/sdlemu/%.cpp
	@echo "*** Compiling $<..."
	$(CC) $(CPPFLAGS) $(INCS) -c $< -o $@

obj/%.o: src/zlib-113/%.c
	@echo "*** Compiling $<..."
	$(CC) $(CFLAGS) $(INCS) -c $< -o $@
	
$(TARGET)$(EXESUFFIX): $(OBJS)
	@echo "*** Linking it all together..."
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)
	$(STRIP) --strip-all $(TARGET)$(EXESUFFIX)

# Pull in dependencies autogenerated by gcc's -MMD switch
# The "-" in front is there just in case they haven't been created yet

-include obj/*.d

